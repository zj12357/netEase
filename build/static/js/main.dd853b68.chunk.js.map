{"version":3,"sources":["router/index.js","components/loading/Loading.jsx","App.js","serviceWorker.js","redux/store.js","redux/reducers/products-reducer.js","redux/reducers/cart-reducer.js","redux/reducers/index.js","index.js","redux/actions/cart-actions.js","common/request.js","api/home.js","redux/actions/products-actions.js"],"names":["routes","name","exact","link","component","lazy","Promise","resolve","setTimeout","default","Loading","className","Component","RenderRouters","map","item","path","key","render","App","fallback","to","Boolean","window","location","hostname","match","finalCreateStore","initState","product","initialState","cart","quantity","unitCost","allReducers","products","state","action","type","ADD_PRODUCT","shoppingCart","ADD_TO_CART","payload","UPDATE_CART","DELETE_FROM_CART","filter","rootReducer","combineReducers","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","addToCart","deleteFromCart","axios","defaults","baseURL","timeout","headers","post","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","status","reject","fail","removeItem","data","api","grade_detail","garde","url","params","res","err","addProduct","dispatch","getState","msg","changeProduct","log","list"],"mappings":"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","file":"static/js/main.dd853b68.chunk.js","sourcesContent":["// import AsyncComponent from '@/components/AsyncComponent'\r\n// const Home = AsyncComponent(() => import('@/pages/Home.jsx'))\r\n// const TodoList = AsyncComponent(() => import('@/pages/TodoList.jsx'))\r\n// const Saga = AsyncComponent(() => import('@/pages/Saga.jsx'))\r\n// const Hooks = AsyncComponent(() => import('@/pages/Hooks.jsx'))\r\nimport React,{lazy} from 'react'\r\nconst Home = lazy(() => import('@/pages/Home.jsx'))\r\nconst TodoList = lazy(() => import('@/pages/TodoList.jsx'))\r\nconst Saga = lazy(() => import('@/pages/Saga.jsx'))\r\nconst Hooks = lazy(() => import('@/pages/Hooks.jsx'))\r\nconst Other2 = lazy(() => new Promise(resolve =>\r\n    setTimeout(() =>\r\n            resolve(\r\n                // 模拟ES Module\r\n                {\r\n                    // 模拟export default\r\n                    default: function render() {\r\n                        return <div>Other2 Component</div>\r\n                    }\r\n                }\r\n            ),\r\n        3000\r\n    )\r\n));\r\nconst routes = [\r\n    {\r\n        name: '首页',\r\n        exact : true,\r\n        link: '/home',\r\n        component: Home\r\n    },\r\n    {\r\n        name: 'todo',\r\n        exact : false,\r\n        link: '/home/todolist',\r\n        component: TodoList\r\n    },\r\n    {\r\n        name: 'saga',\r\n        exact : false,\r\n        link: '/saga',\r\n        component: Saga\r\n    },\r\n    {\r\n        name: 'hooks',\r\n        exact : false,\r\n        link: '/hooks',\r\n        component: Hooks\r\n    },\r\n    {\r\n        name: 'other',\r\n        exact : false,\r\n        link: '/other',\r\n        component: Other2\r\n    },\r\n\r\n\r\n]\r\nexport default routes\r\n","import React, {Component} from 'react';\r\nimport './index.scss'\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-sm-2\">\r\n                <div className=\"sp sp-3balls\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;\r\n","import React, {Fragment,Suspense} from 'react';\r\nimport './App.scss';\r\nimport routes from '@/router/index.js';\r\nimport Loading from '@/components/loading/Loading.jsx'\r\nimport { BrowserRouter as Router, Route,Switch,Redirect,Link } from 'react-router-dom'\r\nfunction RenderRouters({routes}) {\r\n    return routes.map((item) =>{\r\n        return(\r\n            <Route\r\n                path={item.link}\r\n                key={item.name}\r\n                exact={item.exact}\r\n                render={() => (\r\n                    <div>\r\n                        <item.component />\r\n                    </div>\r\n                )} />\r\n        )\r\n    })\r\n}\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Suspense fallback={  <Loading></Loading>}>\r\n            <Router>\r\n                    <Switch>\r\n                        <Fragment>\r\n                            <ul>\r\n                                <li>\r\n                                    <Link to=\"/\">Home</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/home/todolist\">todo</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/hooks\">hooks</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/other\">other</Link>\r\n                                </li>\r\n                            </ul>\r\n                            <Route exact path=\"/\" render={() => (\r\n                                <Redirect to=\"/home\" />\r\n                            )} />\r\n                            <RenderRouters routes={routes}></RenderRouters>\r\n                        </Fragment>\r\n                    </Switch>\r\n                </Router>\r\n        </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore,applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger'\r\nimport rootReducer from './reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nlet finalCreateStore\r\nif (process.env.NODE_ENV === 'production') {  //这里判断项目环境，正式的话打印的，和可视化的中间件可以去掉\r\n    finalCreateStore = [thunk]\r\n} else if (window.__REDUX_DEVTOOLS_EXTENSION__) { //检查到有redux可视化工具就使用\r\n    finalCreateStore =[thunk, createLogger()]\r\n} else {\r\n    finalCreateStore = [thunk, createLogger()]\r\n}\r\nlet store = createStore(\r\n    rootReducer ,\r\n    composeWithDevTools(\r\n        applyMiddleware(...finalCreateStore)\r\n    )\r\n)\r\n\r\n\r\nexport default store;\r\n","import {ADD_PRODUCT} from \"../actions/products-actions\";\r\nlet initState = {\r\n    product: [], // 保存列表\r\n}\r\nexport default function(state=initState, action) {\r\n    const {product}=action\r\n    switch(action.type){\r\n        case ADD_PRODUCT: {\r\n            return {\r\n              ...state,product\r\n            }\r\n        }\r\n    }\r\n    return state;\r\n}\r\n","import  { ADD_TO_CART,UPDATE_CART ,DELETE_FROM_CART}  from '../actions/cart-actions';\r\n\r\nconst initialState = {\r\n    cart: [\r\n        {\r\n            product: 'bread 700g',\r\n            quantity: 2,\r\n            unitCost: 90\r\n        },\r\n        {\r\n            product: 'milk 500ml',\r\n            quantity: 1,\r\n            unitCost: 47\r\n        }\r\n    ]\r\n}\r\n\r\nexport default function(state=initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_TO_CART: {\r\n            return {\r\n                ...state,\r\n                cart: [...state.cart, action.payload]\r\n            }\r\n        }\r\n        case UPDATE_CART: {\r\n            return {\r\n                ...state,\r\n                cart: state.cart.map(item => item.product === action.payload.product ? action.payload : item)\r\n            }\r\n        }\r\n\r\n        case DELETE_FROM_CART: {\r\n            return {\r\n                ...state,\r\n                cart: state.cart.filter(item => item.product !== action.payload.product)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\nimport productsReducer from './products-reducer';\r\nimport cartReducer from './cart-reducer';\r\n\r\nconst allReducers = {\r\n    products: productsReducer,\r\n    shoppingCart: cartReducer\r\n}\r\n\r\nconst rootReducer = combineReducers(allReducers);\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'lib-flexible'\r\nimport store from './redux/store.js'\r\n// import store from '@/store/store.js'\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const UPDATE_CART = 'UPDATE_CART';\r\nexport const DELETE_FROM_CART = 'DELETE_FROM_CART';\r\nexport function addToCart(product, quantity, unitCost) {\r\n    return {\r\n        type: ADD_TO_CART,\r\n        payload: { product, quantity, unitCost }\r\n    }\r\n}\r\nexport function updateCart(product, quantity, unitCost) {\r\n    return {\r\n        type: UPDATE_CART,\r\n        payload: {\r\n            product,\r\n            quantity,\r\n            unitCost\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteFromCart(product) {\r\n    return {\r\n        type: DELETE_FROM_CART,\r\n        payload: {\r\n            product\r\n        }\r\n    }\r\n}\r\n","/**axios封装\r\n * 请求拦截、相应拦截、错误统一处理\r\n */\r\nimport axios from 'axios';\r\nimport { Toast } from 'antd-mobile';\r\n\r\n// 环境的切换\r\nif (process.env.NODE_ENV == 'development') {\r\n    axios.defaults.baseURL = '/api';\r\n} else if (process.env.NODE_ENV == 'debug') {\r\n    axios.defaults.baseURL = '';\r\n} else if (process.env.NODE_ENV == 'production') {\r\n    axios.defaults.baseURL = '/';\r\n}\r\n\r\n// 请求超时时间\r\naxios.defaults.timeout = 10000;\r\n\r\n// post请求头\r\n// axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\r\naxios.defaults.headers.post['Content-Type']='application/json'\r\n\r\n// 请求拦截器\r\naxios.interceptors.request.use(\r\n    config => {\r\n        // 每次发送请求之前判断是否存在token，如果存在，则统一在http请求的header都加上token，不用每次请求都手动添加了\r\n        // 即使本地存在token，也有可能token是过期的，所以在响应拦截器中要对返回状态进行判断\r\n        const token =localStorage.getItem('token');\r\n        token && (config.headers.Authorization = token);\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.error(error);\r\n    })\r\n\r\n// 响应拦截器\r\naxios.interceptors.response.use(\r\n    response => {\r\n        if (response.status === 200) {\r\n            return Promise.resolve(response);\r\n        } else {\r\n            return Promise.reject(response);\r\n        }\r\n    },\r\n    // 服务器状态码不是200的情况\r\n    error => {\r\n        if (error.response.status) {\r\n            switch (error.response.status) {\r\n                // 401: 未登录\r\n                // 未登录则跳转登录页面，并携带当前页面的路径\r\n                // 在登录成功后返回当前页面，这一步需要在登录页操作。\r\n                case 401:\r\n\r\n                    // router.replace({\r\n                    //     path: '/login',\r\n                    //     query: { redirect: router.currentRoute.fullPath }\r\n                    // });\r\n\r\n                    break;\r\n                // 403 token过期\r\n                // 登录过期对用户进行提示\r\n                // 清除本地token和清空vuex中token对象\r\n                // 跳转登录页面\r\n                case 403:\r\n                    Toast.fail('登录过期，请重新登录', 1);\r\n                    // 清除token\r\n                    localStorage.removeItem('token');\r\n\r\n                    // store.commit('loginSuccess', null);\r\n\r\n                    // 跳转登录页面，并将要浏览的页面fullPath传过去，登录成功后跳转需要访问的页面\r\n\r\n                    // setTimeout(() => {\r\n                    //     router.replace({\r\n                    //         path: '/login',\r\n                    //         query: {\r\n                    //             redirect: router.currentRoute.fullPath\r\n                    //         }\r\n                    //     });\r\n                    // }, 1000);\r\n                    break;\r\n                // 404请求不存在\r\n                case 404:\r\n                    Toast.fail('网络请求不存在', 1);\r\n                    break;\r\n                // 其他错误，直接抛出错误提示\r\n                default:\r\n                    Toast.fail(error.response.data.message, 1);\r\n\r\n            }\r\n            return Promise.reject(error.response);\r\n        }\r\n    }\r\n);\r\n/**\r\n * get方法，对应get请求\r\n * @param {String} url [请求的url地址]\r\n * @param {Object} params [请求时携带的参数]\r\n */\r\nexport function get(url, params){\r\n    return new Promise((resolve, reject) =>{\r\n        axios.get(url, {\r\n            params: params\r\n        })\r\n            .then(res => {\r\n                resolve(res.data);\r\n            })\r\n            .catch(err => {\r\n                reject(err.data)\r\n            })\r\n    });\r\n}\r\n/**\r\n * post方法，对应post请求\r\n * @param {String} url [请求的url地址]\r\n * @param {Object} params [请求时携带的参数]\r\n */\r\nexport function post(url, params) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(url,params)\r\n            .then(res => {\r\n                resolve(res.data);\r\n            })\r\n            .catch(err => {\r\n                reject(err.data)\r\n            })\r\n    });\r\n}\r\n","import { post,get } from '@/common/request.js'\r\nconst api={\r\n    /*等级规则*/\r\n    gradeDetail:'h5/v5/user/grade/queryH5',\r\n}\r\n/*等级规则*/\r\nexport const grade_detail = (garde)=>{  return post(api.gradeDetail, garde)}\r\n","import {grade_detail} from '@/api/home.js'\r\nimport { Toast} from 'antd-mobile';\r\nexport const ADD_PRODUCT='ADD_PRODUCT';\r\nexport const addProduct=()=>{\r\n    return (dispatch,getState)=>{\r\n        grade_detail({}).then(res=>{\r\n            let {data,status,msg} = res;\r\n            if(status==200){\r\n                dispatch(changeProduct(data))\r\n                console.log(getState().product)\r\n            }else {\r\n                Toast(msg,1)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n}\r\nexport const changeProduct=(list)=>{\r\n\r\n    return{\r\n        type:ADD_PRODUCT,\r\n        product:list\r\n    }\r\n}\r\n"],"sourceRoot":""}